const puppeteer = require('puppeteer');

async function testBrowser() {
    console.log('üß™ Test kh·ªüi t·∫°o browser...');
    let browser = null;

    try {
        console.log('üìã Ki·ªÉm tra Puppeteer...');
        console.log('Puppeteer path:', require.resolve('puppeteer'));

        // Test 1: Headless mode
        console.log('üìã Test 1: Th·ª≠ kh·ªüi t·∫°o browser headless...');
        browser = await puppeteer.launch({
            headless: true,
            args: [
                '--no-sandbox',
                '--disable-setuid-sandbox',
                '--disable-dev-shm-usage',
                '--disable-gpu',
                '--disable-extensions'
            ]
        });

        console.log('‚úÖ Browser headless kh·ªüi t·∫°o th√†nh c√¥ng');

        const page = await browser.newPage();
        console.log('‚úÖ T·∫°o page th√†nh c√¥ng');

        // Set timeout ng·∫Øn h∆°n
        page.setDefaultNavigationTimeout(10000);
        page.setDefaultTimeout(5000);

        await page.goto('https://www.google.com', {
            waitUntil: 'domcontentloaded',
            timeout: 10000
        });
        console.log('‚úÖ Truy c·∫≠p Google th√†nh c√¥ng');

        const title = await page.title();
        console.log('‚úÖ L·∫•y title th√†nh c√¥ng:', title);

        await browser.close();
        browser = null;
        console.log('‚úÖ ƒê√≥ng browser th√†nh c√¥ng');

        // Test 2: Non-headless mode
        console.log('\nüìã Test 2: Th·ª≠ kh·ªüi t·∫°o browser c√≥ giao di·ªán...');
        browser = await puppeteer.launch({
            headless: false,
            defaultViewport: null,
            args: [
                '--no-sandbox',
                '--disable-setuid-sandbox',
                '--disable-dev-shm-usage'
            ]
        });

        console.log('‚úÖ Browser c√≥ giao di·ªán kh·ªüi t·∫°o th√†nh c√¥ng');

        const page2 = await browser.newPage();
        await page2.goto('https://www.google.com', {
            waitUntil: 'domcontentloaded',
            timeout: 10000
        });
        console.log('‚úÖ Truy c·∫≠p Google v·ªõi giao di·ªán th√†nh c√¥ng');

        // Gi·ªØ browser m·ªü 3 gi√¢y ƒë·ªÉ xem
        console.log('‚è≥ Gi·ªØ browser m·ªü 3 gi√¢y ƒë·ªÉ xem...');
        await new Promise(resolve => setTimeout(resolve, 3000));

        await browser.close();
        browser = null;

        console.log('üéâ Test ho√†n th√†nh - Puppeteer ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng');

    } catch (error) {
        console.error('‚ùå Test th·∫•t b·∫°i:', error.message);

        if (browser) {
            try {
                await browser.close();
            } catch (closeError) {
                console.error('L·ªói ƒë√≥ng browser:', closeError.message);
            }
        }

        console.log('\nüîß H∆∞·ªõng d·∫´n kh·∫Øc ph·ª•c:');
        console.log('1. C√†i ƒë·∫∑t l·∫°i Puppeteer:');
        console.log('   npm uninstall puppeteer puppeteer-core');
        console.log('   npm install puppeteer');
        console.log('2. Ho·∫∑c c√†i Chrome:');
        console.log('   brew install --cask google-chrome');
        console.log('3. Ki·ªÉm tra Chrome ƒë√£ c√†i ch∆∞a:');
        console.log('   ls "/Applications/Google Chrome.app"');
    }
}

testBrowser();
